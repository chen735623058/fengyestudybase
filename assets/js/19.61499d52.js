(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{168:function(t,a,s){"use strict";s.r(a);var n=s(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"_6-opengl-es着色器语言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-opengl-es着色器语言","aria-hidden":"true"}},[t._v("#")]),t._v(" 6-OpenGL ES着色器语言")]),t._v(" "),s("h2",{attrs:{id:"一、学习要点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、学习要点","aria-hidden":"true"}},[t._v("#")]),t._v(" 一、学习要点")]),t._v(" "),s("blockquote",[s("p",[t._v("本章稍作休息，暂时不实验WebGL示例程序，我们熟悉一下 OpenGL ES着色器语言，及其关键特性。")])]),t._v(" "),s("ol",[s("li",[t._v("数据、变量和变量类型。")]),t._v(" "),s("li",[t._v("矢量、矩阵、结构体、数组、采样器（纹理）。")]),t._v(" "),s("li",[t._v("运算、程序流、函数")]),t._v(" "),s("li",[t._v("attribute、uniform 和 varying 变量")]),t._v(" "),s("li",[t._v("精度限定词")]),t._v(" "),s("li",[t._v("预处理和质量。")])]),t._v(" "),s("h2",{attrs:{id:"二、你好-着色器-（hello-word）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、你好-着色器-（hello-word）","aria-hidden":"true"}},[t._v("#")]),t._v(" 二、你好 着色器 （hello word）")]),t._v(" "),s("p",[t._v("简单的着色器")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 顶点着色器")]),t._v("\nattribute vec4 a_Position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nattribute vec4 a_Color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nuniform mat4 u_MvpMatrix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvarying vect v_Color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    gl_Position "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" u_MvpMatrix "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" a_Position "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    v_Color "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a_Color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 片元着色器")]),t._v("\nprecision mediump float"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvarying vec4 v_Color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    gl_FragColor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" v_Color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"三、基础知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、基础知识","aria-hidden":"true"}},[t._v("#")]),t._v(" 三、基础知识")]),t._v(" "),s("ul",[s("li",[t._v("程序是大小写敏感的（marina 和 Marina不同）。")]),t._v(" "),s("li",[t._v("每一个语句都应该以英文分号结束。")]),t._v(" "),s("li",[t._v("执行次序： 从main() 函数开始执行。main()函数不能有任何返回值，也不接收任何参数。")]),t._v(" "),s("li",[t._v("注释格式和JS相同。")])]),t._v(" "),s("h2",{attrs:{id:"四、-数据值类型（数值和-布尔值）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、-数据值类型（数值和-布尔值）","aria-hidden":"true"}},[t._v("#")]),t._v(" 四、 数据值类型（数值和 布尔值）")]),t._v(" "),s("p",[t._v("GLSL只支持两种数据值类型。不支持字符串")]),t._v(" "),s("h2",{attrs:{id:"五、-变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#五、-变量","aria-hidden":"true"}},[t._v("#")]),t._v(" 五、 变量")]),t._v(" "),s("ul",[s("li",[t._v("可以使用任何变量名，不能以保留字 和gl_ webgl_ "),s("em",[t._v("webgl")]),t._v(" 开头就行。")])]),t._v(" "),s("h2",{attrs:{id:"六、-glsl-es-是强类型语言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#六、-glsl-es-是强类型语言","aria-hidden":"true"}},[t._v("#")]),t._v(" 六、 GLSL ES 是强类型语言")]),t._v(" "),s("p",[t._v("使用var 关键字来声明所有变量。必须具体指明变量类型。 声明方式是 <类型> <变量名> 如 vec4 a_Position")]),t._v(" "),s("h2",{attrs:{id:"七、基本类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七、基本类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 七、基本类型")]),t._v(" "),s("p",[t._v("float 单精度浮点数类型\nint 整数\nbool 布尔值")]),t._v(" "),s("blockquote",[s("p",[t._v("变量赋值的时候一定要注意等号两边的类型要相同，如果不相同就会报错。类型转换方式 float() 将整数转换成浮点数。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" int i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n float f1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("支持的转换函数有")])]),t._v(" "),s("ul",[s("li",[t._v("int(): 将浮点数小数部删去，true转换为1 false 转换成0")]),t._v(" "),s("li",[t._v("float() ： 整数转换成浮点数 true转换成1.0 false 转换成 0.0")]),t._v(" "),s("li",[t._v("bool()： 0 转换成 false  非0转成 true")])]),t._v(" "),s("h2",{attrs:{id:"八、-矢量和矩阵"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#八、-矢量和矩阵","aria-hidden":"true"}},[t._v("#")]),t._v(" 八、 矢量和矩阵")]),t._v(" "),s("ul",[s("li",[t._v("矢量类型： vec2 vec3 vec4  ivec2 ivec3 ivec4 bvec2 bvec3 bvec4")]),t._v(" "),s("li",[t._v("矩阵 mat2 mat3 mat4\n构造函数赋值  如 vec4 position = vec4(1.0,2.0,3.0,4.0)；\n多个矢量合并成一个矢量 vec4 v4b = vec4(v2,v4) 规则是先把第一个参数的所有元素填进去 如果未填满，就继续使用第二额参数v4中的元素填充")]),t._v(" "),s("li",[t._v("矩阵构造函数\n向矩阵构造函数中传入矩阵的每个元素的数值来构造矩阵，注意传入值的顺序必须是列主序。"),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("mat4 m4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mat4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16.0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最后的矩阵结构是   1.0,5.0,9.0,13.0,")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                   2.0,6.0,10.0,14.0,")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                   3.0,7.0,11.0,15.0,")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//                   4.0,8.0,12.0,16.0")]),t._v("\n")])])]),t._v("向矩阵中传入单个数值，会形成对小贤上元素都是该值 其他元素为0;")])]),t._v(" "),s("h2",{attrs:{id:"九、访问元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#九、访问元素","aria-hidden":"true"}},[t._v("#")]),t._v(" 九、访问元素")]),t._v(" "),s("ul",[s("li",[t._v("在矢量变量名后接点运算符（.）然后接上分两名，就可以访问矢量元素了。如下")])]),t._v(" "),s("ol",[s("li",[t._v("x,y,z,w 用来获取顶点坐标分量")]),t._v(" "),s("li",[t._v("r,g,b,a 用来获取颜色分量")]),t._v(" "),s("li",[t._v("s,t,p,q 用来获取纹理坐标分量")])]),t._v(" "),s("ul",[s("li",[t._v("多个分量命共同置于运算符后 就可以从矢量中同时抽取多个分量。叫做（混合 swizzling）")]),t._v(" "),s("li",[t._v("[] 需要注意的是不不能使用未经const修饰的变量作为索引值 除非他是循环索引")])]),t._v(" "),s("h2",{attrs:{id:"十、结构体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十、结构体","aria-hidden":"true"}},[t._v("#")]),t._v(" 十、结构体")]),t._v(" "),s("blockquote",[s("p",[t._v("使用关键字 struct 将已存在的类型聚合到一起，就可以定义为结构体，比如")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    struct light"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        vec4 color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        vec3 position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    light l1ml2\n")])])]),s("h2",{attrs:{id:"十一、-数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十一、-数组","aria-hidden":"true"}},[t._v("#")]),t._v(" 十一、 数组")]),t._v(" "),s("blockquote",[s("p",[t._v("与JavaScript不同 GLSL ES只支持一维数组。也不支持pop() 和 push() 等操作， 创建数组时也不需要使用new 运算符。声明时不需要new 运算符。例如")])]),t._v(" "),s("p",[t._v("float floatArray[4];\nvec4 vec4Array[2];")]),t._v(" "),s("blockquote",[s("p",[t._v("数组只支持[] 运算符 但数组的元素能够参与其自身类型支持的任意运算。比如 float f = floatArray[1] * 3.14;")])]),t._v(" "),s("blockquote",[s("p",[t._v("数组下标不能是变量 只能是常量 或者 uniform变量")])]),t._v(" "),s("h2",{attrs:{id:"十二、取样器（纹理）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十二、取样器（纹理）","aria-hidden":"true"}},[t._v("#")]),t._v(" 十二、取样器（纹理）")]),t._v(" "),s("blockquote",[s("p",[t._v("取样器（sampler）我们必须通过该类型变量访问纹理。有两种基本的取样器类型： sampler2D 和 samplerCube。取样器变量只能是uniform变量，或者需要访问纹理的函数，如texture2D() 函数。 如 uniform sampler2D u_Sampler;")])]),t._v(" "),s("ul",[s("li",[t._v("取样器的复制必须要使用gl.uniformli()来进行赋值。")])]),t._v(" "),s("h2",{attrs:{id:"十三、程序流程控制-分支与循环。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十三、程序流程控制-分支与循环。","aria-hidden":"true"}},[t._v("#")]),t._v(" 十三、程序流程控制 分支与循环。")]),t._v(" "),s("ul",[s("li",[t._v("分支使用 if else 控制 没有switch语句")]),t._v(" "),s("li",[t._v("for 循环  和JS一样")]),t._v(" "),s("li",[t._v("continue break 和 discard语句\ndiscard只能在片元着色器中使用，表示放弃当前片元直接处理下一个片元 后续会具体讲到。")])]),t._v(" "),s("h2",{attrs:{id:"十四、函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十四、函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 十四、函数")]),t._v(" "),s("p",[t._v("格式如下")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("    返回类型 函数名 （type0 arg0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" type1 arg1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("）"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        函数计算\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" 返回值\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 例如下代码 将RGBA颜色全置换为亮度值")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("luma")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vec4 color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" g "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("g"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2126")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.7162")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("g "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0772")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("b    \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用方法")]),t._v("\n    attribute vec4 a_Color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" brightness "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("luma")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a_Color"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("规范声明： 如果函数定义在调用之后 一定要在调用前使用规范声明  如 float luma(vec4);")])]),t._v(" "),s("li",[s("p",[t._v("参数限定字：")])])]),t._v(" "),s("ol",[s("li",[t._v("in 想函数中传入值，可以修改，但不会影响函数外面的变量")]),t._v(" "),s("li",[t._v("向函数中传入值，但是这个值不能修改")]),t._v(" "),s("li",[t._v("out 在函数中被赋值，并被传出")]),t._v(" "),s("li",[t._v("inout 传入函数，同时在函数中被赋值，并被传出。")]),t._v(" "),s("li",[t._v("没有限定 和in 一样")])]),t._v(" "),s("h2",{attrs:{id:"十五、-内置函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十五、-内置函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 十五、 内置函数")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/10319049-00d187b229a77e37.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"微信图片_20190426110745.png"}})]),t._v(" "),s("h2",{attrs:{id:"十六、-全局变量和局部变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十六、-全局变量和局部变量","aria-hidden":"true"}},[t._v("#")]),t._v(" 十六、 全局变量和局部变量")]),t._v(" "),s("blockquote",[s("p",[t._v("和 js相同")])]),t._v(" "),s("h2",{attrs:{id:"十七、-存储限定字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十七、-存储限定字","aria-hidden":"true"}},[t._v("#")]),t._v(" 十七、 存储限定字")]),t._v(" "),s("blockquote",[s("p",[t._v("attribute、varying 、 uniform 、const")])]),t._v(" "),s("h3",{attrs:{id:"attribute变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#attribute变量","aria-hidden":"true"}},[t._v("#")]),t._v(" Attribute变量")]),t._v(" "),s("ul",[s("li",[t._v("只能出现在顶点着色器中。")]),t._v(" "),s("li",[t._v("只能被声明为全局变量。")]),t._v(" "),s("li",[t._v("变量类型只能是 float vec2 vec3 vec4 mat2 mat3 mat5")]),t._v(" "),s("li",[t._v("attribute的最大数目  gl_MaxVertexAttribs 最小值为 8")])]),t._v(" "),s("h3",{attrs:{id:"uniform变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uniform变量","aria-hidden":"true"}},[t._v("#")]),t._v(" uniform变量")]),t._v(" "),s("ul",[s("li",[t._v("可以在顶点着色器和片元着色器中。")]),t._v(" "),s("li",[t._v("uniform变量是只读的。")]),t._v(" "),s("li",[t._v("顶点着色器中最小个数 为 128  片元着色器中最小个数为 16")])]),t._v(" "),s("h3",{attrs:{id:"varying变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#varying变量","aria-hidden":"true"}},[t._v("#")]),t._v(" varying变量")]),t._v(" "),s("ul",[s("li",[t._v("必须是全局变量，从顶点着色器向片元着色器传输数据。")])]),t._v(" "),s("h2",{attrs:{id:"十八、-精度限定字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十八、-精度限定字","aria-hidden":"true"}},[t._v("#")]),t._v(" 十八、 精度限定字")]),t._v(" "),s("blockquote",[s("p",[t._v("目的是提高运行效率，削减内存开支。")])]),t._v(" "),s("ul",[s("li",[t._v("precision mediump float(中等精度)")]),t._v(" "),s("li",[t._v("precision highp float(高精度)")]),t._v(" "),s("li",[t._v("precision lowp float(低精度)")]),t._v(" "),s("li",[t._v("每种类型都有默认精度，除了片元着色器中的float类型\n"),s("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/10319049-4c289d236ae371e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"微信图片_20190426113034.png"}})])]),t._v(" "),s("h2",{attrs:{id:"十九、-指令预处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#十九、-指令预处理","aria-hidden":"true"}},[t._v("#")]),t._v(" 十九、 指令预处理")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("#ifdef "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GL_ES")]),t._v("\n  precision mediump float"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n#endif\n")])])]),s("p",[t._v("总结 本章主要是GLSL ES语言的核心特性，后续如果有疑问可以作为工具查询。 下一章正式进入三维的世界。")])])}],!1,null,null,null);a.default=r.exports}}]);